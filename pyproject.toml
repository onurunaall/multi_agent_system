[tool.poetry]
name = "multi-agent-system"
version = "0.1.0"
description = "A sophisticated multi-agent customer support system using LangGraph"
authors = ["Onur Ãœnal <onur.unal402@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/onurunaall/multi-agent-system"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
langchain = ">=0.3.27"
langchain-community = ">=0.3.27"
langchain-openai = ">=0.3.28"
langchain-experimental = ">=0.3.4"
langgraph = ">=0.5.4"
langgraph-supervisor = "0.0.28"
python-dotenv = "^1.0.1"
pydantic = "^2.10.5"
sqlalchemy = "^2.0.36"
requests = "^2.32.3"
psycopg2-binary = "^2.9.0"
chromadb = "^0.5.4"
sentence-transformers = "^3.0.1"
langchain-chroma = "^0.1.2"
torch = "2.2.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.12.0"
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
pyppeteer = "^2.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.0"
sphinx-rtd-theme = "^2.0.0"
sphinx-autodoc-typehints = "^2.0.0"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
| \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| build
| dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203, W503"
exclude = [
    ".git",
    "**pycache**",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    "venv/"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langgraph.*",
    "sqlalchemy.*",
    "nest_asyncio.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--tb=short"
]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"